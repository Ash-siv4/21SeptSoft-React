{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashsi\\\\Desktop\\\\react app\\\\my-app\\\\src\\\\Components\\\\Lifecycle\\\\ClassClock.jsx\";\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ClassClock extends Component {\n  constructor(props) {\n    super(props);\n\n    this.stateHandle = () => {\n      console.log(\"stateHandle sets the time as :\" + this.state.date);\n      this.setState({\n        text: \"Updated\"\n      });\n    };\n\n    this.stateHandle2 = () => {\n      console.log(\"stateHandle2 sets the time as :\" + this.state.date);\n      clearInterval(this.timerID);\n      this.setState({\n        text: \"Updated and timer has stopped\"\n      });\n    };\n\n    this.shouldHandle = () => {\n      console.log(\"shouldHandle sets the time as :\" + this.state.date);\n      this.setState({\n        boolForShould: !this.state.boolForShould\n      });\n    };\n\n    this.continue = () => {\n      console.log(\"continue sets the time as :\" + this.state.date);\n      this.componentDidMount();\n      this.setState({\n        text: \"Timer continues\",\n        boolForShould: true\n      });\n    };\n\n    this.state = {\n      date: new Date(),\n      text: \"\",\n      boolForShould: true\n    };\n    console.log(\"Constructor sets the time as :\" + this.state.date);\n  }\n\n  componentWillMount() {\n    console.log(\"componentWillMount sets the time as :\" + this.state.date);\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount sets the time as :\" + this.state.date);\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUpdate() {\n    console.log(\"componentWillUpdate sets the time as :\" + this.state.date);\n  }\n\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount sets the time as :\" + this.state.date);\n    clearInterval(this.timerID);\n  }\n\n  shouldComponentUpdate() {\n    console.log(\"shouldComponentUpdate sets the time as :\" + this.state.date);\n    return this.state.boolForShould;\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate sets the time as :\" + this.state.date);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"It is \", this.state.date.toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.stateHandle,\n        children: \"Changes State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.stateHandle2,\n        children: \"Changes State and stops timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.shouldHandle,\n        children: \"Changes shouldComponentUpdate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.continue,\n        children: \"Continue timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ClassClock;","map":{"version":3,"sources":["C:/Users/ashsi/Desktop/react app/my-app/src/Components/Lifecycle/ClassClock.jsx"],"names":["Component","ClassClock","constructor","props","stateHandle","console","log","state","date","setState","text","stateHandle2","clearInterval","timerID","shouldHandle","boolForShould","continue","componentDidMount","Date","componentWillMount","setInterval","tick","componentWillUpdate","componentWillUnmount","shouldComponentUpdate","componentDidUpdate","render","toLocaleTimeString"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\n\r\nclass ClassClock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n      text: \"\",\r\n      boolForShould: true,\r\n    };\r\n    console.log(\"Constructor sets the time as :\" + this.state.date);\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"componentWillMount sets the time as :\" + this.state.date);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount sets the time as :\" + this.state.date);\r\n    this.timerID = setInterval(() => this.tick(), 1000);\r\n  }\r\n  componentWillUpdate() {\r\n    console.log(\"componentWillUpdate sets the time as :\" + this.state.date);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"componentWillUnmount sets the time as :\" + this.state.date);\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  shouldComponentUpdate() {\r\n    console.log(\"shouldComponentUpdate sets the time as :\" + this.state.date);\r\n    return this.state.boolForShould;\r\n  }\r\n  componentDidUpdate() {\r\n    console.log(\"componentDidUpdate sets the time as :\" + this.state.date);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date(),\r\n    });\r\n  }\r\n\r\n  stateHandle = () => {\r\n    console.log(\"stateHandle sets the time as :\" + this.state.date);\r\n    this.setState({\r\n      text: \"Updated\",\r\n    });\r\n  };\r\n\r\n  stateHandle2 = () => {\r\n    console.log(\"stateHandle2 sets the time as :\" + this.state.date);\r\n    clearInterval(this.timerID);\r\n    this.setState({\r\n      text: \"Updated and timer has stopped\",\r\n    });\r\n  };\r\n\r\n  shouldHandle = () => {\r\n    console.log(\"shouldHandle sets the time as :\" + this.state.date);\r\n    this.setState({\r\n      boolForShould: !this.state.boolForShould,\r\n    });\r\n  };\r\n\r\n  continue = () => {\r\n    console.log(\"continue sets the time as :\" + this.state.date);\r\n    this.componentDidMount();\r\n    this.setState({\r\n      text: \"Timer continues\",\r\n      boolForShould: true,\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>{this.state.text}</h1>\r\n        <h2>It is {this.state.date.toLocaleTimeString()}</h2>\r\n        <button onClick={this.stateHandle}>Changes State</button>\r\n        <button onClick={this.stateHandle2}>Changes State and stops timer</button>\r\n        <button onClick={this.shouldHandle}>Changes shouldComponentUpdate</button>\r\n        <button onClick={this.continue}>Continue timer</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClassClock;"]},"metadata":{},"sourceType":"module"}