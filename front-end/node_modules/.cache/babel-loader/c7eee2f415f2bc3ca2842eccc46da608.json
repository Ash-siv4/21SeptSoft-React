{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashsi\\\\Desktop\\\\react app\\\\my-app\\\\src\\\\Components\\\\LiftingStates\\\\SearchableList.jsx\",\n    _s = $RefreshSig$();\n\nimport data from \"./Todo.json\";\nimport SearchBar from \"./SearchBar\";\nimport List from \"./List\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchableList = () => {\n  _s();\n\n  //this state store the search query\n  const [q, setQ] = useState(\"\");\n  const [completed, setCompleted] = useState(false);\n  const date = new Date(); // function to update our stateful value\n\n  const qHandler = e => {\n    setQ(e.target.value); // console.log(q);\n  };\n\n  const handleCompleted = e => {\n    setCompleted(c => !c); // console.log(completed);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: date.toLocaleTimeString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      query: q,\n      queryFunction: qHandler,\n      completed: completed,\n      completedFunction: handleCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      list: data,\n      query: q,\n      completed: completed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SearchableList, \"uB5Wxp0lmZHzR+nlCr4ZXGrklHA=\");\n\n_c = SearchableList;\nexport default SearchableList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchableList\");","map":{"version":3,"sources":["C:/Users/ashsi/Desktop/react app/my-app/src/Components/LiftingStates/SearchableList.jsx"],"names":["data","SearchBar","List","useState","SearchableList","q","setQ","completed","setCompleted","date","Date","qHandler","e","target","value","handleCompleted","c","toLocaleTimeString"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B;AACA,QAAM,CAACC,CAAD,EAAIC,IAAJ,IAAYH,QAAQ,CAAC,EAAD,CAA1B;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMM,IAAI,GAAG,IAAIC,IAAJ,EAAb,CAL2B,CAO3B;;AACA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtBN,IAAAA,IAAI,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAJ,CADsB,CAEtB;AACD,GAHD;;AAIA,QAAMC,eAAe,GAAIH,CAAD,IAAO;AAC7BJ,IAAAA,YAAY,CAACQ,CAAC,IAAE,CAACA,CAAL,CAAZ,CAD6B,CAE7B;AACD,GAHD;;AAMA,sBACE;AAAA,4BACE;AAAA,gBAAKP,IAAI,CAACQ,kBAAL;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEZ,CAAlB;AAAqB,MAAA,aAAa,EAAEM,QAApC;AAA8C,MAAA,SAAS,EAAGJ,SAA1D;AAAqE,MAAA,iBAAiB,EAAEQ;AAAxF;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEf,IAAZ;AAAkB,MAAA,KAAK,EAAEK,CAAzB;AAA4B,MAAA,SAAS,EAAEE;AAAvC;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD,CA1BD;;GAAMH,c;;KAAAA,c;AA4BN,eAAeA,cAAf","sourcesContent":["import data from \"./Todo.json\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport List from \"./List\";\r\nimport { useState } from \"react\";\r\n\r\nconst SearchableList = () => {\r\n  //this state store the search query\r\n  const [q, setQ] = useState(\"\");\r\n  const [completed, setCompleted] = useState(false)\r\n\r\n  const date = new Date();\r\n\r\n  // function to update our stateful value\r\n  const qHandler = (e) => {\r\n    setQ(e.target.value);\r\n    // console.log(q);\r\n  };\r\n  const handleCompleted = (e) => {\r\n    setCompleted(c=>!c);\r\n    // console.log(completed);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <h1>{date.toLocaleTimeString()}</h1>\r\n      {/* <SearchBar query={q} queryFunction={setQ}/> */}\r\n      <SearchBar query={q} queryFunction={qHandler} completed ={completed} completedFunction={handleCompleted} />\r\n      <List list={data} query={q} completed={completed} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchableList;"]},"metadata":{},"sourceType":"module"}