{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashsi\\\\Desktop\\\\react app\\\\my-app\\\\front-end\\\\src\\\\Components\\\\LiftingStates\\\\List.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n//another child\nconst List = _ref => {\n  let {\n    list,\n    query,\n    completed,\n    notCompleted\n  } = _ref;\n  // console.log(\"The query is:\",query);\n  console.log(completed); // const complete = (completed) => {\n  //   (list) => {\n  //     list.completed === completed;\n  //   }\n  // }\n\n  let complete = function complete(completed) {\n    return function (list) {\n      return list.completed === completed;\n    };\n  };\n\n  let incomplete = function complete(notCompleted) {\n    return function (list) {\n      return list.completed !== notCompleted;\n    };\n  };\n\n  const filterQuery = query => list => list.title.includes(query); // console.log(filterQuery);\n  // let filteredList = list.filter(filterQuery(query));\n  // console.log(filteredList);\n\n\n  let filteredList = [];\n\n  if (completed) {\n    filteredList = list.filter(complete(completed)).filter(filterQuery(query));\n  } else if (notCompleted) {\n    filteredList = list.filter(incomplete(notCompleted)).filter(filterQuery(query));\n  } else {\n    filteredList = list.filter(filterQuery(query));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filteredList.map(tempVal => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: tempVal.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: tempVal.completed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, tempVal.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n};\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/ashsi/Desktop/react app/my-app/front-end/src/Components/LiftingStates/List.jsx"],"names":["List","list","query","completed","notCompleted","console","log","complete","incomplete","filterQuery","title","includes","filteredList","filter","map","tempVal","id"],"mappings":";;;;AACA;AACA,MAAMA,IAAI,GAAG,QAA8C;AAAA,MAA7C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,GAA6C;AACzD;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAJyD,CAMzD;AACA;AACA;AACA;AACA;;AAEA,MAAII,QAAQ,GAAG,SAASA,QAAT,CAAkBJ,SAAlB,EAA4B;AACzC,WAAO,UAAUF,IAAV,EAAe;AACpB,aAAOA,IAAI,CAACE,SAAL,KAAmBA,SAA1B;AACD,KAFD;AAGD,GAJD;;AAMA,MAAIK,UAAU,GAAG,SAASD,QAAT,CAAkBH,YAAlB,EAA+B;AAC9C,WAAO,UAAUH,IAAV,EAAe;AACpB,aAAOA,IAAI,CAACE,SAAL,KAAmBC,YAA1B;AACD,KAFD;AAGD,GAJD;;AAMA,QAAMK,WAAW,GAAIP,KAAD,IAAYD,IAAD,IAAUA,IAAI,CAACS,KAAL,CAAWC,QAAX,CAAoBT,KAApB,CAAzC,CAxByD,CAyBzD;AAEA;AACA;;;AAEA,MAAIU,YAAY,GAAG,EAAnB;;AAEA,MAAIT,SAAJ,EAAe;AACbS,IAAAA,YAAY,GAAGX,IAAI,CAACY,MAAL,CAAYN,QAAQ,CAACJ,SAAD,CAApB,EAAiCU,MAAjC,CAAwCJ,WAAW,CAACP,KAAD,CAAnD,CAAf;AACD,GAFD,MAGK,IAAGE,YAAH,EAAiB;AACpBQ,IAAAA,YAAY,GAAGX,IAAI,CAACY,MAAL,CAAYL,UAAU,CAACJ,YAAD,CAAtB,EAAsCS,MAAtC,CAA6CJ,WAAW,CAACP,KAAD,CAAxD,CAAf;AACD,GAFI,MAGD;AACFU,IAAAA,YAAY,GAAGX,IAAI,CAACY,MAAL,CAAYJ,WAAW,CAACP,KAAD,CAAvB,CAAf;AACD;;AAID,sBACE;AAAA,cAEIU,YAAY,CAACE,GAAb,CAAkBC,OAAD,iBACf;AAAA,8BACE;AAAA,kBAAKA,OAAO,CAACL;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAEK,OAAO,CAACZ;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUY,OAAO,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,YADF;AAFJ,mBADF;AAaD,CAzDD;;KAAMhB,I;AA2DN,eAAeA,IAAf","sourcesContent":["\r\n//another child\r\nconst List = ({ list, query, completed, notCompleted }) => {\r\n  // console.log(\"The query is:\",query);\r\n\r\n\r\n  console.log(completed);\r\n  \r\n  // const complete = (completed) => {\r\n  //   (list) => {\r\n  //     list.completed === completed;\r\n  //   }\r\n  // }\r\n\r\n  let complete = function complete(completed){\r\n    return function (list){\r\n      return list.completed === completed;\r\n    }\r\n  }\r\n\r\n  let incomplete = function complete(notCompleted){\r\n    return function (list){\r\n      return list.completed !== notCompleted;\r\n    }\r\n  }\r\n\r\n  const filterQuery = (query) => (list) => list.title.includes(query);\r\n  // console.log(filterQuery);\r\n\r\n  // let filteredList = list.filter(filterQuery(query));\r\n  // console.log(filteredList);\r\n\r\n  let filteredList = [];\r\n\r\n  if (completed) {\r\n    filteredList = list.filter(complete(completed)).filter(filterQuery(query))\r\n  }\r\n  else if(notCompleted) {\r\n    filteredList = list.filter(incomplete(notCompleted)).filter(filterQuery(query))\r\n  }\r\n  else{\r\n    filteredList = list.filter(filterQuery(query))\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        filteredList.map((tempVal) => (\r\n          <div key={tempVal.id}>\r\n            <h3>{tempVal.title}</h3>\r\n            <input type=\"checkbox\" checked={tempVal.completed} />\r\n          </div>\r\n        ))\r\n      }\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}