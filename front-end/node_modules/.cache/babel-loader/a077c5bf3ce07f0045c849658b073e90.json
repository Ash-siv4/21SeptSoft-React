{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashsi\\\\Desktop\\\\react app\\\\my-app\\\\src\\\\Components\\\\LiftingStates\\\\List.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst List = _ref => {\n  let {\n    list,\n    query,\n    completed\n  } = _ref;\n\n  //list is our data \n  //query is what we are searching by \n  //Completed is if the checkBox has been ticked or not\n  const filterComplete = () => list => list.completed === completed; // let complete = function complete(completed) {\n  //     return function (list) {\n  //       return list.completed === completed;\n  //     };\n  //   };\n\n\n  const filterQuery = () => list => list.title.toLowerCase().includes(query.toLowerCase()); // let filterQuery = function filterQuery(query) {\n  //     return function (list) {\n  //       return list.title.toLowerCase().includes(query.toLowerCase());\n  //     };\n  //   };\n  //Empty array\n\n\n  let filteredList = []; //if true \n\n  if (completed) {\n    //filter the data first by if it completed and then by the query IF THERE IS A QUERY and assign the data to filteredList\n    filteredList = list.filter(filterComplete()).filter(filterQuery());\n  } else {\n    //filter based on the query and assign the data to filteredList\n    filteredList = list.filter(filterQuery());\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filteredList.map(tempVal => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: tempVal.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), tempVal.completed ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textDecoration: \"line-through\",\n          color: \"red\"\n        },\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"False\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 104\n      }, this)]\n    }, tempVal.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/ashsi/Desktop/react app/my-app/src/Components/LiftingStates/List.jsx"],"names":["List","list","query","completed","filterComplete","filterQuery","title","toLowerCase","includes","filteredList","filter","map","tempVal","textDecoration","color","id"],"mappings":";;;;AAAA,MAAMA,IAAI,GAAG,QAAgC;AAAA,MAA/B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAA+B;;AACzC;AACA;AACA;AAEA,QAAMC,cAAc,GAAG,MAAOH,IAAD,IAASA,IAAI,CAACE,SAAL,KAAmBA,SAAzD,CALyC,CAMzC;AACA;AACA;AACA;AACA;;;AACA,QAAME,WAAW,GAAG,MAAOJ,IAAD,IAAUA,IAAI,CAACK,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCN,KAAK,CAACK,WAAN,EAAlC,CAApC,CAXyC,CAYzC;AACA;AACA;AACA;AACA;AAEA;;;AACF,MAAIE,YAAY,GAAG,EAAnB,CAnB2C,CAqBzC;;AACA,MAAGN,SAAH,EAAa;AACT;AACAM,IAAAA,YAAY,GAAGR,IAAI,CAACS,MAAL,CAAYN,cAAc,EAA1B,EAA8BM,MAA9B,CAAqCL,WAAW,EAAhD,CAAf;AACH,GAHD,MAGK;AACD;AACAI,IAAAA,YAAY,GAAGR,IAAI,CAACS,MAAL,CAAYL,WAAW,EAAvB,CAAf;AACH;;AAEH,sBACE;AAAA,cACGI,YAAY,CAACE,GAAb,CAAkBC,OAAD,iBAChB;AAAA,8BACE;AAAA,kBAAKA,OAAO,CAACN;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,EAGMM,OAAO,CAACT,SAAR,gBAAmB;AAAG,QAAA,KAAK,EAAE;AAACU,UAAAA,cAAc,EAAC,cAAhB;AAAgCC,UAAAA,KAAK,EAAC;AAAtC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAnB,gBAAyF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAH/F;AAAA,OAAUF,OAAO,CAACG,EAAlB;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAaD,CA3CD;;KAAMf,I;AA6CN,eAAeA,IAAf","sourcesContent":["const List = ({ list, query, completed }) => {\r\n    //list is our data \r\n    //query is what we are searching by \r\n    //Completed is if the checkBox has been ticked or not\r\n\r\n    const filterComplete = () => (list)=> list.completed === completed;\r\n    // let complete = function complete(completed) {\r\n    //     return function (list) {\r\n    //       return list.completed === completed;\r\n    //     };\r\n    //   };\r\n    const filterQuery = () => (list) => list.title.toLowerCase().includes(query.toLowerCase());\r\n    // let filterQuery = function filterQuery(query) {\r\n    //     return function (list) {\r\n    //       return list.title.toLowerCase().includes(query.toLowerCase());\r\n    //     };\r\n    //   };\r\n\r\n    //Empty array\r\n  let filteredList = [];\r\n\r\n    //if true \r\n    if(completed){\r\n        //filter the data first by if it completed and then by the query IF THERE IS A QUERY and assign the data to filteredList\r\n        filteredList = list.filter(filterComplete()).filter(filterQuery())\r\n    }else{\r\n        //filter based on the query and assign the data to filteredList\r\n        filteredList = list.filter(filterQuery())\r\n    }\r\n\r\n  return (\r\n    <>\r\n      {filteredList.map((tempVal) => (\r\n        <div key={tempVal.id}>\r\n          <h3>{tempVal.title}</h3>\r\n          {\r\n              tempVal.completed? <p style={{textDecoration:\"line-through\", color:\"red\"}}>Complete</p>: <p>False</p>\r\n          }\r\n          {/* <input type=\"checkbox\" checked={tempVal.completed} readOnly /> */}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}