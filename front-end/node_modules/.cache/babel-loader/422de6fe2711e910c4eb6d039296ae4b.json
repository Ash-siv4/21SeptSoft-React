{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashsi\\\\Desktop\\\\react app\\\\my-app\\\\src\\\\Components\\\\DataRequests\\\\Tesco.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Employee from \"./Employee\";\nimport { Table, Container, Spinner } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tesco = () => {\n  _s();\n\n  // Where we store our data \n  const [data, setData] = useState([]); //has the data loaded?\n\n  const [isLoaded, setIsLoaded] = useState(false); // What about is there is an error ?\n\n  const [error, setError] = useState(null); //pending \n  //resolved - is has loaded\n  //rejected - it has loaded\n\n  useEffect(() => {\n    setTimeout(() => {\n      axios.get(\"https://reqres.in/api/users\").then(response => {\n        setIsLoaded(true);\n        setData(response.data.data);\n      }).catch(error => {\n        setError(error);\n        setIsLoaded(true);\n        console.error(error);\n      });\n    }, 5000);\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Oh noo something went wrong with status code \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 14\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please wait loading data....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n        type: \"grow\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome to Tesco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: data.map(emp => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(Employee, {\n                person: emp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  }\n\n  ;\n};\n\n_s(Tesco, \"4ZBpoadqcXcOGm9sUF2oISehpT8=\");\n\n_c = Tesco;\nexport default Tesco;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tesco\");","map":{"version":3,"sources":["C:/Users/ashsi/Desktop/react app/my-app/src/Components/DataRequests/Tesco.jsx"],"names":["axios","useEffect","useState","Employee","Table","Container","Spinner","Tesco","data","setData","isLoaded","setIsLoaded","error","setError","setTimeout","get","then","response","catch","console","message","map","emp"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAAQC,KAAR,EAAeC,SAAf,EAA0BC,OAA1B,QAAwC,YAAxC;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CAFgB,CAGhB;;AACA,QAAM,CAACQ,QAAD,EAAYC,WAAZ,IAA2BT,QAAQ,CAAC,KAAD,CAAzC,CAJgB,CAKhB;;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC,CANgB,CAQhB;AACA;AACA;;AACFD,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,UAAU,CAAC,MAAI;AAEXd,MAAAA,KAAK,CACJe,GADD,CACK,6BADL,EAECC,IAFD,CAEOC,QAAD,IAAc;AAChBN,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,QAAAA,OAAO,CAACQ,QAAQ,CAACT,IAAT,CAAcA,IAAf,CAAP;AAED,OANH,EAOGU,KAPH,CAOUN,KAAD,IAAW;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAQ,QAAAA,OAAO,CAACP,KAAR,CAAcA,KAAd;AAEH,OAZH;AAaD,KAfO,EAeN,IAfM,CAAV;AAgBH,GAjBQ,EAiBN,EAjBM,CAAT;;AAoBA,MAAGA,KAAH,EAAS;AACL,wBAAO;AAAA,kEAAkDA,KAAK,CAACQ,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEM,IAAG,CAACV,QAAJ,EAAa;AACf,wBACE;AAAA,8BACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,eAEF,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,MAAd;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFE;AAAA,oBADF;AAMH,GAPK,MAOD;AAEL,wBACE;AAAA,6BACA,QAAC,SAAD;AAAA,gCAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,OAAO,MAAd;AAAA,kCACE;AAAA,mCACE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AAAA,sBACGF,IAAI,CAACa,GAAL,CAAUC,GAAD,iBACN;AAAA,qCACI,QAAC,QAAD;AAAU,gBAAA,MAAM,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADH;AADH;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADF;AA2BD;;AAAA;AACA,CAtED;;GAAMf,K;;KAAAA,K;AAwEN,eAAeA,KAAf","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Employee from \"./Employee\";\r\n\r\nimport {Table, Container, Spinner} from 'reactstrap';\r\n\r\nconst Tesco = () => {\r\n    // Where we store our data \r\n    const [data, setData] = useState([]);\r\n    //has the data loaded?\r\n    const [isLoaded , setIsLoaded] = useState(false)\r\n    // What about is there is an error ?\r\n    const [error, setError] = useState(null)\r\n\r\n    //pending \r\n    //resolved - is has loaded\r\n    //rejected - it has loaded\r\n  useEffect(() => {\r\n      setTimeout(()=>{\r\n\r\n          axios\r\n          .get(\"https://reqres.in/api/users\")\r\n          .then((response) => {\r\n              setIsLoaded(true);\r\n              setData(response.data.data);\r\n              \r\n            })\r\n            .catch((error) => {\r\n                setError(error);\r\n                setIsLoaded(true);\r\n                console.error(error);\r\n                \r\n            });\r\n        },5000)\r\n  }, []);\r\n\r\n\r\n  if(error){\r\n      return <h1>Oh noo something went wrong with status code {error.message}</h1>\r\n  }else if(!isLoaded){\r\n      return(\r\n        <>\r\n      <p>Please wait loading data....</p>\r\n      <Spinner type=\"grow\" color=\"primary\" />\r\n      </>\r\n      )\r\n  }else{\r\n\r\n  return (\r\n    <>\r\n    <Container>\r\n        \r\n    \r\n      <h1>Welcome to Tesco</h1>\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>email</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Image</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((emp) => (\r\n              <tr>\r\n                  <Employee person={emp} />\r\n              </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n}\r\n\r\nexport default Tesco;"]},"metadata":{},"sourceType":"module"}